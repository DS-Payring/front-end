import React, { useState } from "react";
import api from "../../components/axiosInstance";
import "../../styles/login.css";
import PageNavigationButton from "../../components/PageNavigate";
import guest from "../../img/guest.png";
import "../../styles/styles.css";

const Login = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState(null);

  // ‚úÖ Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ Ìï®Ïàò
  const handleLogin = async (e) => {
    e.preventDefault();

    if (!email || !password) {
      setError("Ïù¥Î©îÏùºÍ≥º ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Î™®Îëê ÏûÖÎ†•ÌïòÏÑ∏Ïöî.");
      return;
    }

    try {
      const response = await api.post("/auth/login", { email, password });

      console.log("üîç Î°úÍ∑∏Ïù∏ API Ï†ÑÏ≤¥ ÏùëÎãµ:", response.data);
      console.log("üîç Î°úÍ∑∏Ïù∏ ÏùëÎãµÏùò data:", response.data.data);

      // ‚úÖ Ï†ïÌôïÌïú ÏúÑÏπòÏóêÏÑú `token` Ï∂îÏ∂ú
      const token = response.data.data?.token;
      const refreshToken = response.data.data?.refreshToken;

      if (!token) {
        console.error("‚ùå Î°úÍ∑∏Ïù∏ ÏùëÎãµÏóê ÌÜ†ÌÅ∞Ïù¥ ÏóÜÏäµÎãàÎã§.");
        setError("Î°úÍ∑∏Ïù∏ Ïã§Ìå®: ÏÑúÎ≤ÑÏóêÏÑú ÌÜ†ÌÅ∞ÏùÑ Î∞õÏßÄ Î™ªÌñàÏäµÎãàÎã§.");
        return;
      }

      // ‚úÖ ÌÜ†ÌÅ∞ Ï†ÄÏû•
      localStorage.setItem("accessToken", token);
      if (refreshToken) {
        localStorage.setItem("refreshToken", refreshToken);
      }
      console.log("‚úÖ Ï†ÄÏû•Ìï† ÌÜ†ÌÅ∞:", token);
      console.log("‚úÖ ÌÜ†ÌÅ∞Ïù¥ localStorageÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.");

      localStorage.setItem("userEmail", email);
      console.log("‚úÖ ÏÇ¨Ïö©Ïûê Ïù¥Î©îÏùºÏù¥ localStorageÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§:", email);

      // ‚úÖ ÌéòÏù¥ÏßÄ Ïù¥Îèô
      console.log("‚úÖ ÌéòÏù¥ÏßÄ Ïù¥ÎèôÏùÑ ÏãúÎèÑÌï©ÎãàÎã§.");
      setTimeout(() => {
        window.location.href = "/main";
      }, 500);
    } catch (error) {
      setError("ÏÑúÎ≤Ñ Ïò§Î•ò: Î°úÍ∑∏Ïù∏ Ïã§Ìå®");
      console.error("‚ùå Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ Ïã§Ìå®:", error);
    }
  };

  return (
    <div className='login-container'>
      <div className="mobile-container">
        <div className="content-wrapper">
          <div className="loginpage">
            <div className="guest">
              <img src={guest} alt="Guest Icon" />
            </div>
            <div className='form-container'>
              <div className='input-form'>
                <form onSubmit={handleLogin} style={{ display: 'flex', flexDirection: 'column' }}>
                  <div>
                    <label htmlFor="email">Ïù¥Î©îÏùº</label>
                    <input
                      type="email"
                      id="email"
                      value={email}
                      placeholder="Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                      onChange={(e) => setEmail(e.target.value)}
                      required
                    />
                  </div>
                  <div>
                    <label htmlFor="password">ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                    <input
                      type="password"
                      id="password"
                      value={password}
                      placeholder="ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                      onChange={(e) => setPassword(e.target.value)}
                      required
                    />
                  </div>
                  {error && <p className="error">{error}</p>}
                  <div className="button-container">
                    <button type="submit" className="login-btn">Î°úÍ∑∏Ïù∏</button>
                    <PageNavigationButton label="ÌöåÏõêÍ∞ÄÏûÖ" className="sign-btn" to="/signup" />
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Login;
